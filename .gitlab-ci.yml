
image: node:20

cache:
  key: node_modules
  paths:
    - node_modules

stages:
  - github
  # - sonarqube
  - install
  - build
  - deploy

github-push:
  stage: github
  only:
    - master
  script:
    - git clone --bare https://gitlab.com/my-portfolio-exprerience/my-portfolio-v3.git
    - cd my-portfolio-v3.git
    - git config --global user.email "$GITHUB_PRIVATE_EMAIL"
    - git reset --soft HEAD~1
    - git push --mirror https://$GITHUB_ACCESS_TOKEN@github.com/$MIRROR_USERNAME/my-portfolio-v3.git
    - git push --mirror https://$MIRROR_USERNAME:$BITBUCKET_ACCESS_TOKEN@bitbucket.org/$MIRROR_USERNAME/my-portfolio-v3.git
    - cd ..
    - rm -rf my-portfolio-v3.git

# sonarqube:
#   stage: sonarqube
#   image: 
#     name: sonarsource/sonar-scanner-cli:latest
#     entrypoint: [""]
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#     GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script: 
#     - sonar-scanner
#   allow_failure: true
#   only:
#     - master # or the name of your main branch

install:
  stage: install
  only:
    - master
  script:
    - yarn install --cache-folder .yarn
  artifacts:
    paths:
      - node_modules

build:
  stage: build
  only:
    - master
  script:
    - yarn build:production-gitlab
  dependencies:
    - install
  artifacts:
    paths:
      - dist

deploy:
  stage: deploy
  only:
    - master
  before_script:
    - echo -n $GOOGLE_APPLICATION_CREDENTIALS_BASE64 | base64 -d > private-key.json
    - export GOOGLE_APPLICATION_CREDENTIAL=private-key.json
    - node -v
    - yarn version
  script:
    - yarn info yarn description
    - yarn global add firebase-tools --cache-folder node_modules
    ## For login local
    # - firebase login:ci --interactive
    # - firebase login:ci --interactive --no-localhost --debug
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" GOOGLE_APPLICATION_CREDENTIAL=private-key.json --non-interactive --project $FIREBASE_PROJECT
    # - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_DEPLOY_KEY --project $FIREBASE_PROJECT
  dependencies:
    - install
    - build
